<UserControl x:Class="SilverlightDataEntry.Views.CustomerAddressView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pf="clr-namespace:Caliburn.PresentationFramework;assembly=Caliburn.PresentationFramework"
    xmlns:ca="clr-namespace:Caliburn.PresentationFramework.Actions;assembly=Caliburn.PresentationFramework"
    xmlns:Framework="clr-namespace:Caliburn.Silverlight.ApplicationFramework;assembly=Caliburn.Silverlight.ApplicationFramework"
    Width="300">

    <Grid x:Name="LayoutRoot" DataContext="{Binding CurrentCustomerAddress}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Border  Grid.ColumnSpan="3" Margin="2"
                    CornerRadius="4"
                    Padding="2">
            <Grid>
                <StackPanel Orientation="Horizontal">

                    <TextBlock Text="{Binding AccountNumber}" />
                    <TextBlock Text="{Binding FullName}" />

                </StackPanel>
                <Ellipse Height="16"
                             Width="16"
                             Margin="0 0 2 0"
                             Fill="{StaticResource redBrush}"
                             HorizontalAlignment="Right"
                             Visibility="{Binding IsDirty, Converter={StaticResource booleanToVisibilityConverter}}"
                             pf:Message.Attach="[Event MouseEnter] = [Action ValidateItem]"/>
                <Popup x:Name="dirtyPopup">
                    <Grid Margin="2">
                        <Border Margin="2 2 0 0"
                                    CornerRadius="4"
                                    Background="Gray"
                                    Opacity=".5" />
                        <Border BorderBrush="{StaticResource redBrush}"
                                    BorderThickness="2"
                                    CornerRadius="4"
                                    Background="White"
                                    Margin="0 0 2 2"
                                    Padding="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <StackPanel Background="White">
                                    <TextBlock Text="Changes have been made since the last save."
                                                   Foreground="Black" />
                                    <ItemsControl Margin="10 0 0 0"
                                                      Foreground="Red"
                                                      x:Name="messageHost">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <HyperlinkButton Content="{Binding Message}"
                                                                     Foreground="Red"
                                                                     ca:Action.Target="{Binding}"
                                                                     pf:Message.Attach="[Event Click] = [Action DrawAttentionTo]"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>

        <TextBlock Text="Address 1" Grid.Row="2"/>
        <TextBox Grid.Row="2" Grid.Column="1" Framework:Bind.Text="AddressLine1" Width="120"/>

        <TextBlock Grid.Row="3" Text="Address 2" />
        <TextBox Grid.Row="3" Grid.Column="1"  Framework:Bind.Text="AddressLine2" Width="120"/>

        <TextBlock Grid.Row="4" Text="City" />
        <TextBox Grid.Row="4"  Grid.Column="1" Framework:Bind.Text="City" Width="120"/>

        <TextBlock Grid.Row="5" Text="State" />
        <TextBox Grid.Row="5" Grid.Column="1"  Framework:Bind.Text="State" Width="120"/>

        <TextBlock Grid.Row="6" Text="Zip" />
        <TextBox Grid.Row="6" Grid.Column="1" Framework:Bind.Text="Zip" Width="120"/>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Grid.Row="7"
                    Grid.ColumnSpan="3">
            <Button Content="Apply"  x:Name="Apply" />
            <Button Content="Ok"  x:Name="Ok" />
            <Button Content="Cancel" x:Name="Cancel" />
            <Button Content="Search" x:Name="Search" />

        </StackPanel>
        <TextBlock Grid.Row="8" TextWrapping="Wrap" Grid.ColumnSpan="4" Foreground="{StaticResource ShinyPieDataPointBrushOrange}" >
            <LineBreak />
            This is a simple example of using the Caliburn ModelFramework to build a view for display and validation.  
            <LineBreak />
            The exceptions are compiled into a list which would make for easy service validation intergration.<LineBreak />
            The red dot in the upper right corner indicates changed fields or invalid fields. <LineBreak />
            
        </TextBlock>
    </Grid>
</UserControl>
